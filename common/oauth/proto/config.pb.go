// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/common/oauth/proto/config.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Config struct {
	// Types that are valid to be assigned to Type:
	//	*Config_BearerToken
	//	*Config_GoogleCredentials
	Type                 isConfig_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abe588b78ed21bf, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

type isConfig_Type interface {
	isConfig_Type()
}

type Config_BearerToken struct {
	BearerToken *BearerToken `protobuf:"bytes,1,opt,name=bearer_token,json=bearerToken,oneof"`
}

type Config_GoogleCredentials struct {
	GoogleCredentials *GoogleCredentials `protobuf:"bytes,2,opt,name=google_credentials,json=googleCredentials,oneof"`
}

func (*Config_BearerToken) isConfig_Type() {}

func (*Config_GoogleCredentials) isConfig_Type() {}

func (m *Config) GetType() isConfig_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Config) GetBearerToken() *BearerToken {
	if x, ok := m.GetType().(*Config_BearerToken); ok {
		return x.BearerToken
	}
	return nil
}

func (m *Config) GetGoogleCredentials() *GoogleCredentials {
	if x, ok := m.GetType().(*Config_GoogleCredentials); ok {
		return x.GoogleCredentials
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Config) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Config_BearerToken)(nil),
		(*Config_GoogleCredentials)(nil),
	}
}

// Bearer token is added to the HTTP request through an HTTP header:
// "Authorization: Bearer <access_token>"
type BearerToken struct {
	// Types that are valid to be assigned to Source:
	//	*BearerToken_File
	//	*BearerToken_Cmd
	//	*BearerToken_GceServiceAccount
	Source isBearerToken_Source `protobuf_oneof:"source"`
	// How often to refresh token. As OAuth token usually expire, we need to
	// refresh them on a regular interval. If set to 0, caching is disabled.
	RefreshIntervalSec   *float32 `protobuf:"fixed32,90,opt,name=refresh_interval_sec,json=refreshIntervalSec,def=60" json:"refresh_interval_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BearerToken) Reset()         { *m = BearerToken{} }
func (m *BearerToken) String() string { return proto.CompactTextString(m) }
func (*BearerToken) ProtoMessage()    {}
func (*BearerToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abe588b78ed21bf, []int{1}
}

func (m *BearerToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BearerToken.Unmarshal(m, b)
}
func (m *BearerToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BearerToken.Marshal(b, m, deterministic)
}
func (m *BearerToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BearerToken.Merge(m, src)
}
func (m *BearerToken) XXX_Size() int {
	return xxx_messageInfo_BearerToken.Size(m)
}
func (m *BearerToken) XXX_DiscardUnknown() {
	xxx_messageInfo_BearerToken.DiscardUnknown(m)
}

var xxx_messageInfo_BearerToken proto.InternalMessageInfo

const Default_BearerToken_RefreshIntervalSec float32 = 60

type isBearerToken_Source interface {
	isBearerToken_Source()
}

type BearerToken_File struct {
	File string `protobuf:"bytes,1,opt,name=file,oneof"`
}

type BearerToken_Cmd struct {
	Cmd string `protobuf:"bytes,2,opt,name=cmd,oneof"`
}

type BearerToken_GceServiceAccount struct {
	GceServiceAccount string `protobuf:"bytes,3,opt,name=gce_service_account,json=gceServiceAccount,oneof"`
}

func (*BearerToken_File) isBearerToken_Source() {}

func (*BearerToken_Cmd) isBearerToken_Source() {}

func (*BearerToken_GceServiceAccount) isBearerToken_Source() {}

func (m *BearerToken) GetSource() isBearerToken_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *BearerToken) GetFile() string {
	if x, ok := m.GetSource().(*BearerToken_File); ok {
		return x.File
	}
	return ""
}

func (m *BearerToken) GetCmd() string {
	if x, ok := m.GetSource().(*BearerToken_Cmd); ok {
		return x.Cmd
	}
	return ""
}

func (m *BearerToken) GetGceServiceAccount() string {
	if x, ok := m.GetSource().(*BearerToken_GceServiceAccount); ok {
		return x.GceServiceAccount
	}
	return ""
}

func (m *BearerToken) GetRefreshIntervalSec() float32 {
	if m != nil && m.RefreshIntervalSec != nil {
		return *m.RefreshIntervalSec
	}
	return Default_BearerToken_RefreshIntervalSec
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BearerToken) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BearerToken_File)(nil),
		(*BearerToken_Cmd)(nil),
		(*BearerToken_GceServiceAccount)(nil),
	}
}

// Google credentials in JSON format. We simply use oauth2/google package to
// use these credentials.
type GoogleCredentials struct {
	JsonFile *string  `protobuf:"bytes,1,opt,name=json_file,json=jsonFile" json:"json_file,omitempty"`
	Scope    []string `protobuf:"bytes,2,rep,name=scope" json:"scope,omitempty"`
	// Use encoded JWT directly as access token, instead of implementing the whole
	// OAuth2.0 flow.
	JwtAsAccessToken *bool `protobuf:"varint,4,opt,name=jwt_as_access_token,json=jwtAsAccessToken" json:"jwt_as_access_token,omitempty"`
	// Audience works only if jwt_as_access_token is true.
	Audience             *string  `protobuf:"bytes,3,opt,name=audience" json:"audience,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleCredentials) Reset()         { *m = GoogleCredentials{} }
func (m *GoogleCredentials) String() string { return proto.CompactTextString(m) }
func (*GoogleCredentials) ProtoMessage()    {}
func (*GoogleCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_0abe588b78ed21bf, []int{2}
}

func (m *GoogleCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleCredentials.Unmarshal(m, b)
}
func (m *GoogleCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleCredentials.Marshal(b, m, deterministic)
}
func (m *GoogleCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleCredentials.Merge(m, src)
}
func (m *GoogleCredentials) XXX_Size() int {
	return xxx_messageInfo_GoogleCredentials.Size(m)
}
func (m *GoogleCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleCredentials proto.InternalMessageInfo

func (m *GoogleCredentials) GetJsonFile() string {
	if m != nil && m.JsonFile != nil {
		return *m.JsonFile
	}
	return ""
}

func (m *GoogleCredentials) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *GoogleCredentials) GetJwtAsAccessToken() bool {
	if m != nil && m.JwtAsAccessToken != nil {
		return *m.JwtAsAccessToken
	}
	return false
}

func (m *GoogleCredentials) GetAudience() string {
	if m != nil && m.Audience != nil {
		return *m.Audience
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "cloudprober.oauth.Config")
	proto.RegisterType((*BearerToken)(nil), "cloudprober.oauth.BearerToken")
	proto.RegisterType((*GoogleCredentials)(nil), "cloudprober.oauth.GoogleCredentials")
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/common/oauth/proto/config.proto", fileDescriptor_0abe588b78ed21bf)
}

var fileDescriptor_0abe588b78ed21bf = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x31, 0x8f, 0xd3, 0x40,
	0x10, 0x85, 0xe3, 0x24, 0x44, 0xc9, 0x84, 0x82, 0xec, 0xa5, 0xb0, 0x40, 0x42, 0x51, 0x44, 0x91,
	0x06, 0xfb, 0x84, 0x10, 0x05, 0x12, 0x45, 0x12, 0x09, 0x42, 0xbb, 0x07, 0x0d, 0xcd, 0xca, 0x1e,
	0x4f, 0x1c, 0x07, 0x7b, 0xc7, 0xda, 0x5d, 0xdf, 0x89, 0x9f, 0xc1, 0xcf, 0x40, 0xe2, 0x47, 0x22,
	0xaf, 0x2d, 0x72, 0x22, 0x94, 0xef, 0xbd, 0xcf, 0x33, 0x6f, 0xbc, 0xf0, 0x21, 0x2f, 0xdc, 0xa9,
	0x49, 0x23, 0xe4, 0x2a, 0xce, 0x99, 0xf3, 0x92, 0x62, 0x2c, 0xb9, 0xc9, 0x6a, 0xc3, 0x29, 0x99,
	0x18, 0xb9, 0xaa, 0x58, 0xc7, 0x9c, 0x34, 0xee, 0x14, 0xd7, 0x86, 0x1d, 0xc7, 0xc8, 0xfa, 0x58,
	0xe4, 0x91, 0x17, 0x62, 0xf1, 0x08, 0x8e, 0x3c, 0xb5, 0xfe, 0x1d, 0xc0, 0x64, 0xef, 0x19, 0xb1,
	0x87, 0xa7, 0x29, 0x25, 0x86, 0x8c, 0x72, 0xfc, 0x9d, 0x74, 0x18, 0xac, 0x82, 0xcd, 0xfc, 0xcd,
	0xcb, 0xe8, 0xea, 0xa3, 0x68, 0xe7, 0xb1, 0x2f, 0x2d, 0x75, 0x18, 0xc8, 0x79, 0x7a, 0x91, 0xe2,
	0x2b, 0x88, 0xae, 0x98, 0x42, 0x43, 0x19, 0x69, 0x57, 0x24, 0xa5, 0x0d, 0x87, 0x7e, 0xd4, 0xab,
	0xff, 0x8c, 0xfa, 0xe4, 0xe1, 0xfd, 0x85, 0x3d, 0x0c, 0xe4, 0x22, 0xff, 0xd7, 0xdc, 0x4d, 0x60,
	0xec, 0x7e, 0xd4, 0xb4, 0xfe, 0x15, 0xc0, 0xfc, 0xd1, 0x76, 0xb1, 0x84, 0xf1, 0xb1, 0x28, 0xc9,
	0x77, 0x9d, 0x1d, 0x06, 0xd2, 0x2b, 0x21, 0x60, 0x84, 0x55, 0xe6, 0xb7, 0xb6, 0x66, 0x2b, 0xc4,
	0x2d, 0xdc, 0xe4, 0x48, 0xca, 0x92, 0xb9, 0x2f, 0x90, 0x54, 0x82, 0xc8, 0x8d, 0x76, 0xe1, 0xa8,
	0x67, 0x16, 0x39, 0xd2, 0x5d, 0x97, 0x6d, 0xbb, 0x48, 0xbc, 0x85, 0xa5, 0xa1, 0xa3, 0x21, 0x7b,
	0x52, 0x85, 0x76, 0x64, 0xee, 0x93, 0x52, 0x59, 0xc2, 0xf0, 0xdb, 0x2a, 0xd8, 0x0c, 0xdf, 0x0f,
	0xdf, 0xdd, 0x4a, 0xd1, 0xe7, 0x9f, 0xfb, 0xf8, 0x8e, 0x70, 0x37, 0x85, 0x89, 0xe5, 0xc6, 0x20,
	0xad, 0x7f, 0x06, 0xb0, 0xb8, 0x3a, 0x4f, 0xbc, 0x80, 0xd9, 0xd9, 0xb2, 0x56, 0x97, 0xda, 0x72,
	0xda, 0x1a, 0x1f, 0xdb, 0xe2, 0x4b, 0x78, 0x62, 0x91, 0x6b, 0x0a, 0x87, 0xab, 0xd1, 0x66, 0x26,
	0x3b, 0x21, 0x5e, 0xc3, 0xcd, 0xf9, 0xc1, 0xa9, 0xc4, 0xb6, 0xad, 0xc9, 0xda, 0xfe, 0x7d, 0xc6,
	0xab, 0x60, 0x33, 0x95, 0xcf, 0xce, 0x0f, 0x6e, 0x6b, 0xb7, 0x3e, 0xe8, 0xfe, 0xc9, 0x73, 0x98,
	0x26, 0x4d, 0x56, 0x90, 0x46, 0xea, 0xce, 0x93, 0x7f, 0xf5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xe2, 0x44, 0x04, 0xd1, 0x41, 0x02, 0x00, 0x00,
}
