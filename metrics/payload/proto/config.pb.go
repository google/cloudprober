// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/metrics/payload/proto/config.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	proto1 "github.com/google/cloudprober/metrics/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MetricsKind specifies whether to treat output metrics as GAUGE or
// CUMULATIVE. If left unspecified, metrics from ONCE mode probes are treated
// as GAUGE and metrics from SERVER mode probes are treated as CUMULATIVE.
type OutputMetricsOptions_MetricsKind int32

const (
	OutputMetricsOptions_UNDEFINED  OutputMetricsOptions_MetricsKind = 0
	OutputMetricsOptions_GAUGE      OutputMetricsOptions_MetricsKind = 1
	OutputMetricsOptions_CUMULATIVE OutputMetricsOptions_MetricsKind = 2
)

var OutputMetricsOptions_MetricsKind_name = map[int32]string{
	0: "UNDEFINED",
	1: "GAUGE",
	2: "CUMULATIVE",
}

var OutputMetricsOptions_MetricsKind_value = map[string]int32{
	"UNDEFINED":  0,
	"GAUGE":      1,
	"CUMULATIVE": 2,
}

func (x OutputMetricsOptions_MetricsKind) Enum() *OutputMetricsOptions_MetricsKind {
	p := new(OutputMetricsOptions_MetricsKind)
	*p = x
	return p
}

func (x OutputMetricsOptions_MetricsKind) String() string {
	return proto.EnumName(OutputMetricsOptions_MetricsKind_name, int32(x))
}

func (x *OutputMetricsOptions_MetricsKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OutputMetricsOptions_MetricsKind_value, data, "OutputMetricsOptions_MetricsKind")
	if err != nil {
		return err
	}
	*x = OutputMetricsOptions_MetricsKind(value)
	return nil
}

func (OutputMetricsOptions_MetricsKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_93691c8ac256752b, []int{0, 0}
}

type OutputMetricsOptions struct {
	MetricsKind *OutputMetricsOptions_MetricsKind `protobuf:"varint,1,opt,name=metrics_kind,json=metricsKind,enum=cloudprober.metrics.payload.OutputMetricsOptions_MetricsKind" json:"metrics_kind,omitempty"`
	// Additional labels (comma-separated) to attach to the output metrics, e.g.
	// "region=us-east1,zone=us-east1-d". ptype="external" and probe="<probeName>"
	// are attached automatically.
	AdditionalLabels *string `protobuf:"bytes,2,opt,name=additional_labels,json=additionalLabels" json:"additional_labels,omitempty"`
	// Whether to aggregate metrics in Cloudprober. If enabled, Cloudprober
	// aggregates the metrics returned by the external probe process -- external
	// probe process should return metrics only since the last probe run.
	// Note that this option is mutually exclusive with GAUGE metrics and
	// cloudprober will fail during initialization if both options are enabled.
	AggregateInCloudprober *bool `protobuf:"varint,3,opt,name=aggregate_in_cloudprober,json=aggregateInCloudprober,def=0" json:"aggregate_in_cloudprober,omitempty"`
	// Metrics that should be treated as distributions. These metrics are exported
	// by the external probe program as comma-separated list of values, for
	// example: "op_latency 4.7,5.6,5.9,6.1,4.9". To be able to build distribution
	// from these values, these metrics should be pre-configured in external
	// probe:
	// dist_metric {
	//   key: "op_latency"
	//   value {
	//     explicit_buckets: "1,2,4,8,16,32,64,128,256"
	//   }
	// }
	DistMetric           map[string]*proto1.Dist `protobuf:"bytes,4,rep,name=dist_metric,json=distMetric" json:"dist_metric,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *OutputMetricsOptions) Reset()         { *m = OutputMetricsOptions{} }
func (m *OutputMetricsOptions) String() string { return proto.CompactTextString(m) }
func (*OutputMetricsOptions) ProtoMessage()    {}
func (*OutputMetricsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_93691c8ac256752b, []int{0}
}

func (m *OutputMetricsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputMetricsOptions.Unmarshal(m, b)
}
func (m *OutputMetricsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputMetricsOptions.Marshal(b, m, deterministic)
}
func (m *OutputMetricsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputMetricsOptions.Merge(m, src)
}
func (m *OutputMetricsOptions) XXX_Size() int {
	return xxx_messageInfo_OutputMetricsOptions.Size(m)
}
func (m *OutputMetricsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputMetricsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_OutputMetricsOptions proto.InternalMessageInfo

const Default_OutputMetricsOptions_AggregateInCloudprober bool = false

func (m *OutputMetricsOptions) GetMetricsKind() OutputMetricsOptions_MetricsKind {
	if m != nil && m.MetricsKind != nil {
		return *m.MetricsKind
	}
	return OutputMetricsOptions_UNDEFINED
}

func (m *OutputMetricsOptions) GetAdditionalLabels() string {
	if m != nil && m.AdditionalLabels != nil {
		return *m.AdditionalLabels
	}
	return ""
}

func (m *OutputMetricsOptions) GetAggregateInCloudprober() bool {
	if m != nil && m.AggregateInCloudprober != nil {
		return *m.AggregateInCloudprober
	}
	return Default_OutputMetricsOptions_AggregateInCloudprober
}

func (m *OutputMetricsOptions) GetDistMetric() map[string]*proto1.Dist {
	if m != nil {
		return m.DistMetric
	}
	return nil
}

func init() {
	proto.RegisterEnum("cloudprober.metrics.payload.OutputMetricsOptions_MetricsKind", OutputMetricsOptions_MetricsKind_name, OutputMetricsOptions_MetricsKind_value)
	proto.RegisterType((*OutputMetricsOptions)(nil), "cloudprober.metrics.payload.OutputMetricsOptions")
	proto.RegisterMapType((map[string]*proto1.Dist)(nil), "cloudprober.metrics.payload.OutputMetricsOptions.DistMetricEntry")
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/metrics/payload/proto/config.proto", fileDescriptor_93691c8ac256752b)
}

var fileDescriptor_93691c8ac256752b = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0xed, 0xea, 0xc0, 0xa6, 0x3a, 0x6b, 0x10, 0xa9, 0xf3, 0xa5, 0xec, 0xa9, 0x20, 0xb4,
	0xb0, 0x07, 0x95, 0x81, 0xe8, 0xd8, 0xea, 0x18, 0xee, 0x0f, 0x14, 0x2b, 0xbe, 0xd5, 0xb4, 0xc9,
	0x6a, 0x58, 0xd6, 0x94, 0x36, 0x15, 0xf6, 0x61, 0xfd, 0x2e, 0xd2, 0x3f, 0x6c, 0x43, 0x86, 0xe8,
	0x5b, 0xee, 0xb9, 0xbf, 0x1c, 0xce, 0xb9, 0xe0, 0x31, 0xa2, 0xe2, 0x23, 0x0f, 0xac, 0x90, 0xaf,
	0xec, 0x88, 0xf3, 0x88, 0x11, 0x3b, 0x64, 0x3c, 0xc7, 0x49, 0xca, 0x03, 0x92, 0xda, 0x2b, 0x22,
	0x52, 0x1a, 0x66, 0x76, 0x82, 0xd6, 0x8c, 0x23, 0x6c, 0x27, 0x29, 0x17, 0xdc, 0x0e, 0x79, 0xbc,
	0xa0, 0x91, 0x55, 0x0e, 0xf0, 0x6a, 0x87, 0xb7, 0x6a, 0xde, 0xaa, 0xf9, 0xf6, 0xcd, 0x1f, 0xed,
	0x4b, 0x5b, 0x4c, 0x33, 0x51, 0x99, 0x76, 0xbe, 0x64, 0x70, 0x3e, 0xcf, 0x45, 0x92, 0x8b, 0x69,
	0x85, 0xcc, 0x13, 0x41, 0x79, 0x9c, 0xc1, 0x77, 0x70, 0x5c, 0x7f, 0xf2, 0x97, 0x34, 0xc6, 0xba,
	0x64, 0x48, 0x66, 0xab, 0x7b, 0x6f, 0xfd, 0x12, 0xc2, 0xda, 0x67, 0x64, 0xd5, 0xe3, 0x33, 0x8d,
	0xb1, 0xab, 0xae, 0xb6, 0x03, 0xbc, 0x06, 0x67, 0x08, 0x63, 0x5a, 0x50, 0x88, 0xf9, 0x0c, 0x05,
	0x84, 0x65, 0x7a, 0xc3, 0x90, 0x4c, 0xc5, 0xd5, 0xb6, 0x8b, 0x49, 0xa9, 0xc3, 0x07, 0xa0, 0xa3,
	0x28, 0x4a, 0x49, 0x84, 0x04, 0xf1, 0x69, 0xec, 0xef, 0xc4, 0xd0, 0x65, 0x43, 0x32, 0x8f, 0x7a,
	0xcd, 0x05, 0x62, 0x19, 0x71, 0x2f, 0x36, 0xd8, 0x38, 0x1e, 0x6c, 0x21, 0x18, 0x00, 0xb5, 0xa8,
	0xed, 0x57, 0x09, 0xf4, 0x43, 0x43, 0x36, 0xd5, 0x6e, 0xff, 0xff, 0x75, 0x86, 0x34, 0xab, 0x25,
	0x27, 0x16, 0xe9, 0xda, 0x05, 0x78, 0x23, 0xb4, 0xdf, 0xc0, 0xe9, 0x8f, 0x35, 0xd4, 0x80, 0xbc,
	0x24, 0xeb, 0xf2, 0x7a, 0x8a, 0x5b, 0x3c, 0xa1, 0x0d, 0x9a, 0x9f, 0x88, 0xe5, 0xa4, 0xac, 0xaa,
	0x76, 0x2f, 0xf7, 0x46, 0x28, 0x6c, 0xdc, 0x8a, 0xeb, 0x35, 0xee, 0xa4, 0xce, 0x2d, 0x50, 0x77,
	0xee, 0x08, 0x4f, 0x80, 0xe2, 0xcd, 0x86, 0xce, 0xd3, 0x78, 0xe6, 0x0c, 0xb5, 0x03, 0xa8, 0x80,
	0xe6, 0xa8, 0xef, 0x8d, 0x1c, 0x4d, 0x82, 0x2d, 0x00, 0x06, 0xde, 0xd4, 0x9b, 0xf4, 0x5f, 0xc6,
	0xaf, 0x8e, 0xd6, 0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x6e, 0xa4, 0xb6, 0x77, 0x02, 0x00,
	0x00,
}
