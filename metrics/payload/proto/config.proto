syntax = "proto2";

package cloudprober.metrics.payload;

import "github.com/google/cloudprober/metrics/proto/dist.proto";

message OutputMetricsOptions {
  // MetricsKind specifies whether to treat output metrics as GAUGE or
  // CUMULATIVE. If left unspecified, metrics from ONCE mode probes are treated
  // as GAUGE and metrics from SERVER mode probes are treated as CUMULATIVE.
  enum MetricsKind {
    UNDEFINED = 0;
    GAUGE = 1;
    CUMULATIVE = 2;
  }
  optional MetricsKind metrics_kind = 1;

  // Additional labels (comma-separated) to attach to the output metrics, e.g.
  // "region=us-east1,zone=us-east1-d". ptype="external" and probe="<probeName>"
  // are attached automatically.
  optional string additional_labels = 2;

  // Whether to aggregate metrics in Cloudprober. If enabled, Cloudprober
  // aggregates the metrics returned by the external probe process -- external
  // probe process should return metrics only since the last probe run.
  // Note that this option is mutually exclusive with GAUGE metrics and
  // cloudprober will fail during initialization if both options are enabled.
  optional bool aggregate_in_cloudprober = 3 [default = false];

  // Metrics that should be treated as distributions. These metrics are exported
  // by the external probe program as comma-separated list of values, for
  // example: "op_latency 4.7,5.6,5.9,6.1,4.9". To be able to build distribution
  // from these values, these metrics should be pre-configured in external
  // probe:
  // dist_metric {
  //   key: "op_latency"
  //   value {
  //     explicit_buckets: "1,2,4,8,16,32,64,128,256"
  //   }
  // }
  map<string, metrics.Dist> dist_metric = 4;
}
