// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/probes/http/proto/config.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProbeConf_ProtocolType int32

const (
	ProbeConf_HTTP  ProbeConf_ProtocolType = 0
	ProbeConf_HTTPS ProbeConf_ProtocolType = 1
)

var ProbeConf_ProtocolType_name = map[int32]string{
	0: "HTTP",
	1: "HTTPS",
}
var ProbeConf_ProtocolType_value = map[string]int32{
	"HTTP":  0,
	"HTTPS": 1,
}

func (x ProbeConf_ProtocolType) Enum() *ProbeConf_ProtocolType {
	p := new(ProbeConf_ProtocolType)
	*p = x
	return p
}
func (x ProbeConf_ProtocolType) String() string {
	return proto.EnumName(ProbeConf_ProtocolType_name, int32(x))
}
func (x *ProbeConf_ProtocolType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProbeConf_ProtocolType_value, data, "ProbeConf_ProtocolType")
	if err != nil {
		return err
	}
	*x = ProbeConf_ProtocolType(value)
	return nil
}
func (ProbeConf_ProtocolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_config_cdc5d76da22aceed, []int{0, 0}
}

type ProbeConf_Method int32

const (
	ProbeConf_GET     ProbeConf_Method = 0
	ProbeConf_POST    ProbeConf_Method = 1
	ProbeConf_PUT     ProbeConf_Method = 2
	ProbeConf_HEAD    ProbeConf_Method = 3
	ProbeConf_DELETE  ProbeConf_Method = 4
	ProbeConf_PATCH   ProbeConf_Method = 5
	ProbeConf_OPTIONS ProbeConf_Method = 6
)

var ProbeConf_Method_name = map[int32]string{
	0: "GET",
	1: "POST",
	2: "PUT",
	3: "HEAD",
	4: "DELETE",
	5: "PATCH",
	6: "OPTIONS",
}
var ProbeConf_Method_value = map[string]int32{
	"GET":     0,
	"POST":    1,
	"PUT":     2,
	"HEAD":    3,
	"DELETE":  4,
	"PATCH":   5,
	"OPTIONS": 6,
}

func (x ProbeConf_Method) Enum() *ProbeConf_Method {
	p := new(ProbeConf_Method)
	*p = x
	return p
}
func (x ProbeConf_Method) String() string {
	return proto.EnumName(ProbeConf_Method_name, int32(x))
}
func (x *ProbeConf_Method) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProbeConf_Method_value, data, "ProbeConf_Method")
	if err != nil {
		return err
	}
	*x = ProbeConf_Method(value)
	return nil
}
func (ProbeConf_Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_config_cdc5d76da22aceed, []int{0, 1}
}

type ProbeConf struct {
	// Which HTTP protocol to use
	Protocol *ProbeConf_ProtocolType `protobuf:"varint,1,opt,name=protocol,enum=cloudprober.probes.http.ProbeConf_ProtocolType,def=0" json:"protocol,omitempty"`
	// Relative URL (to append to all targets). Must begin with '/'
	RelativeUrl *string `protobuf:"bytes,2,opt,name=relative_url,json=relativeUrl" json:"relative_url,omitempty"`
	// Port, default is 80 for HTTP and 443 for HTTPS
	Port *int32 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	// Whether to resolve the target before making the request. If set to false,
	// we hand over the target and relative_url directly to the golang's HTTP
	// module, Otherwise, we resolve the target first to an IP address and
	// make a request using that while passing target name as Host header.
	ResolveFirst *bool `protobuf:"varint,4,opt,name=resolve_first,json=resolveFirst,def=0" json:"resolve_first,omitempty"`
	// Export response (body) count as a metric
	ExportResponseAsMetrics *bool `protobuf:"varint,5,opt,name=export_response_as_metrics,json=exportResponseAsMetrics,def=0" json:"export_response_as_metrics,omitempty"`
	// If specified, this string is used for payload's integrity check.
	// Note: This feature is experimental and will most likely be replaced by a
	// generic validator framework.
	IntegrityCheckPattern *string `protobuf:"bytes,6,opt,name=integrity_check_pattern,json=integrityCheckPattern" json:"integrity_check_pattern,omitempty"`
	// HTTP request method
	Method *ProbeConf_Method `protobuf:"varint,7,opt,name=method,enum=cloudprober.probes.http.ProbeConf_Method,def=0" json:"method,omitempty"`
	// HTTP request headers
	Headers []*ProbeConf_Header `protobuf:"bytes,8,rep,name=headers" json:"headers,omitempty"`
	// Request body.
	Body *string `protobuf:"bytes,9,opt,name=body" json:"body,omitempty"`
	// Requests per probe
	RequestsPerProbe *int32 `protobuf:"varint,98,opt,name=requests_per_probe,json=requestsPerProbe,def=1" json:"requests_per_probe,omitempty"`
	// How long to wait between two requests to the same target
	RequestsIntervalMsec *int32 `protobuf:"varint,99,opt,name=requests_interval_msec,json=requestsIntervalMsec,def=25" json:"requests_interval_msec,omitempty"`
	// Export stats after these many milliseconds
	StatsExportIntervalMsec *int32   `protobuf:"varint,100,opt,name=stats_export_interval_msec,json=statsExportIntervalMsec,def=10000" json:"stats_export_interval_msec,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ProbeConf) Reset()         { *m = ProbeConf{} }
func (m *ProbeConf) String() string { return proto.CompactTextString(m) }
func (*ProbeConf) ProtoMessage()    {}
func (*ProbeConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_cdc5d76da22aceed, []int{0}
}
func (m *ProbeConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeConf.Unmarshal(m, b)
}
func (m *ProbeConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeConf.Marshal(b, m, deterministic)
}
func (dst *ProbeConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeConf.Merge(dst, src)
}
func (m *ProbeConf) XXX_Size() int {
	return xxx_messageInfo_ProbeConf.Size(m)
}
func (m *ProbeConf) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeConf.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeConf proto.InternalMessageInfo

const Default_ProbeConf_Protocol ProbeConf_ProtocolType = ProbeConf_HTTP
const Default_ProbeConf_ResolveFirst bool = false
const Default_ProbeConf_ExportResponseAsMetrics bool = false
const Default_ProbeConf_Method ProbeConf_Method = ProbeConf_GET
const Default_ProbeConf_RequestsPerProbe int32 = 1
const Default_ProbeConf_RequestsIntervalMsec int32 = 25
const Default_ProbeConf_StatsExportIntervalMsec int32 = 10000

func (m *ProbeConf) GetProtocol() ProbeConf_ProtocolType {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return Default_ProbeConf_Protocol
}

func (m *ProbeConf) GetRelativeUrl() string {
	if m != nil && m.RelativeUrl != nil {
		return *m.RelativeUrl
	}
	return ""
}

func (m *ProbeConf) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ProbeConf) GetResolveFirst() bool {
	if m != nil && m.ResolveFirst != nil {
		return *m.ResolveFirst
	}
	return Default_ProbeConf_ResolveFirst
}

func (m *ProbeConf) GetExportResponseAsMetrics() bool {
	if m != nil && m.ExportResponseAsMetrics != nil {
		return *m.ExportResponseAsMetrics
	}
	return Default_ProbeConf_ExportResponseAsMetrics
}

func (m *ProbeConf) GetIntegrityCheckPattern() string {
	if m != nil && m.IntegrityCheckPattern != nil {
		return *m.IntegrityCheckPattern
	}
	return ""
}

func (m *ProbeConf) GetMethod() ProbeConf_Method {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return Default_ProbeConf_Method
}

func (m *ProbeConf) GetHeaders() []*ProbeConf_Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *ProbeConf) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *ProbeConf) GetRequestsPerProbe() int32 {
	if m != nil && m.RequestsPerProbe != nil {
		return *m.RequestsPerProbe
	}
	return Default_ProbeConf_RequestsPerProbe
}

func (m *ProbeConf) GetRequestsIntervalMsec() int32 {
	if m != nil && m.RequestsIntervalMsec != nil {
		return *m.RequestsIntervalMsec
	}
	return Default_ProbeConf_RequestsIntervalMsec
}

func (m *ProbeConf) GetStatsExportIntervalMsec() int32 {
	if m != nil && m.StatsExportIntervalMsec != nil {
		return *m.StatsExportIntervalMsec
	}
	return Default_ProbeConf_StatsExportIntervalMsec
}

type ProbeConf_Header struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeConf_Header) Reset()         { *m = ProbeConf_Header{} }
func (m *ProbeConf_Header) String() string { return proto.CompactTextString(m) }
func (*ProbeConf_Header) ProtoMessage()    {}
func (*ProbeConf_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_cdc5d76da22aceed, []int{0, 0}
}
func (m *ProbeConf_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeConf_Header.Unmarshal(m, b)
}
func (m *ProbeConf_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeConf_Header.Marshal(b, m, deterministic)
}
func (dst *ProbeConf_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeConf_Header.Merge(dst, src)
}
func (m *ProbeConf_Header) XXX_Size() int {
	return xxx_messageInfo_ProbeConf_Header.Size(m)
}
func (m *ProbeConf_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeConf_Header.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeConf_Header proto.InternalMessageInfo

func (m *ProbeConf_Header) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ProbeConf_Header) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*ProbeConf)(nil), "cloudprober.probes.http.ProbeConf")
	proto.RegisterType((*ProbeConf_Header)(nil), "cloudprober.probes.http.ProbeConf.Header")
	proto.RegisterEnum("cloudprober.probes.http.ProbeConf_ProtocolType", ProbeConf_ProtocolType_name, ProbeConf_ProtocolType_value)
	proto.RegisterEnum("cloudprober.probes.http.ProbeConf_Method", ProbeConf_Method_name, ProbeConf_Method_value)
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/probes/http/proto/config.proto", fileDescriptor_config_cdc5d76da22aceed)
}

var fileDescriptor_config_cdc5d76da22aceed = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x51, 0x8f, 0xd2, 0x40,
	0x10, 0x80, 0xaf, 0x07, 0x2d, 0x30, 0x77, 0x9a, 0x66, 0x73, 0x4a, 0x73, 0x4f, 0x88, 0x2f, 0xe8,
	0x43, 0xcb, 0x91, 0x68, 0x0c, 0xf1, 0x05, 0xb9, 0x9e, 0x5c, 0x22, 0x52, 0x97, 0xde, 0x73, 0x53,
	0xca, 0x00, 0x8d, 0xa5, 0x5b, 0x77, 0x17, 0x22, 0x7f, 0xcd, 0x5f, 0x67, 0x76, 0x5b, 0x08, 0x3e,
	0x98, 0xdc, 0x53, 0x67, 0x3b, 0xdf, 0x37, 0xd9, 0x99, 0x1d, 0xf8, 0xbc, 0x4e, 0xe5, 0x66, 0xb7,
	0x70, 0x13, 0xb6, 0xf5, 0xd6, 0x8c, 0xad, 0x33, 0xf4, 0x92, 0x8c, 0xed, 0x96, 0x05, 0x67, 0x0b,
	0xe4, 0x9e, 0xfe, 0x08, 0x6f, 0x23, 0x65, 0xa1, 0x62, 0xc9, 0xbc, 0x84, 0xe5, 0xab, 0x74, 0xed,
	0xea, 0x03, 0x69, 0x9f, 0xb1, 0x6e, 0xc9, 0xba, 0x8a, 0xed, 0xfe, 0xb1, 0xa0, 0x15, 0xa8, 0xf3,
	0x98, 0xe5, 0x2b, 0xf2, 0x03, 0x9a, 0x9a, 0x4f, 0x58, 0xe6, 0x18, 0x1d, 0xa3, 0xf7, 0x72, 0xe0,
	0xb9, 0xff, 0x31, 0xdd, 0x93, 0xa5, 0x22, 0xad, 0x84, 0x87, 0x02, 0x87, 0xf5, 0x49, 0x18, 0x06,
	0xf4, 0x54, 0x86, 0xbc, 0x81, 0x6b, 0x8e, 0x59, 0x2c, 0xd3, 0x3d, 0x46, 0x3b, 0x9e, 0x39, 0x97,
	0x1d, 0xa3, 0xd7, 0xa2, 0x57, 0xc7, 0x7f, 0x4f, 0x3c, 0x23, 0x04, 0xea, 0x05, 0xe3, 0xd2, 0xa9,
	0x75, 0x8c, 0x9e, 0x49, 0x75, 0x4c, 0xde, 0xc3, 0x0b, 0x8e, 0x82, 0x65, 0x7b, 0x8c, 0x56, 0x29,
	0x17, 0xd2, 0xa9, 0x77, 0x8c, 0x5e, 0x73, 0x68, 0xae, 0xe2, 0x4c, 0x20, 0xbd, 0xae, 0x72, 0x0f,
	0x2a, 0x45, 0xbe, 0xc0, 0x2d, 0xfe, 0x56, 0x56, 0xc4, 0x51, 0x14, 0x2c, 0x17, 0x18, 0xc5, 0x22,
	0xda, 0xa2, 0xe4, 0x69, 0x22, 0x1c, 0xf3, 0x5c, 0x6c, 0x97, 0x20, 0xad, 0xb8, 0x91, 0x98, 0x96,
	0x14, 0xf9, 0x08, 0xed, 0x34, 0x97, 0xb8, 0xe6, 0xa9, 0x3c, 0x44, 0xc9, 0x06, 0x93, 0x9f, 0x51,
	0x11, 0x4b, 0x89, 0x3c, 0x77, 0x2c, 0x7d, 0xe3, 0x57, 0xa7, 0xf4, 0x58, 0x65, 0x83, 0x32, 0x49,
	0x1e, 0xc0, 0xda, 0xa2, 0xdc, 0xb0, 0xa5, 0xd3, 0xd0, 0xf3, 0x7a, 0xf7, 0x8c, 0x79, 0x4d, 0xb5,
	0x30, 0xac, 0x7d, 0xf5, 0x43, 0x5a, 0xd9, 0x64, 0x0c, 0x8d, 0x0d, 0xc6, 0x4b, 0xe4, 0xc2, 0x69,
	0x76, 0x6a, 0xbd, 0xab, 0x67, 0x15, 0x9a, 0x68, 0x83, 0x1e, 0x4d, 0x35, 0xc8, 0x05, 0x5b, 0x1e,
	0x9c, 0x96, 0xbe, 0xb1, 0x8e, 0x89, 0x07, 0x84, 0xe3, 0xaf, 0x1d, 0x0a, 0x29, 0xa2, 0x02, 0x79,
	0xa4, 0x2b, 0x39, 0x0b, 0x35, 0xea, 0xa1, 0x71, 0x47, 0xed, 0x63, 0x32, 0x40, 0xae, 0x0b, 0x93,
	0x4f, 0xf0, 0xfa, 0x24, 0xa8, 0x9e, 0xf9, 0x3e, 0xce, 0xa2, 0xad, 0xc0, 0xc4, 0x49, 0xb4, 0x74,
	0x39, 0xf8, 0x40, 0x6f, 0x8e, 0xc4, 0x63, 0x05, 0x4c, 0x05, 0x26, 0xea, 0x1d, 0x84, 0x8c, 0xa5,
	0x88, 0xaa, 0xd7, 0xf8, 0xd7, 0x5e, 0x6a, 0xdb, 0xbc, 0xeb, 0xf7, 0xfb, 0x7d, 0xda, 0xd6, 0xa0,
	0xaf, 0xb9, 0xf3, 0x1a, 0xb7, 0x03, 0xb0, 0xca, 0xae, 0x54, 0x33, 0x79, 0xbc, 0x45, 0xbd, 0x87,
	0x2d, 0xaa, 0x63, 0x72, 0x03, 0xe6, 0x3e, 0xce, 0x76, 0x58, 0x6d, 0x51, 0x79, 0xe8, 0xbe, 0x85,
	0xeb, 0xf3, 0x15, 0x24, 0x4d, 0xd0, 0x4b, 0x68, 0x5f, 0x90, 0x16, 0x98, 0x2a, 0x9a, 0xdb, 0x46,
	0x97, 0x82, 0x55, 0xce, 0x9d, 0x34, 0x40, 0x4d, 0xde, 0xbe, 0x50, 0x5c, 0x30, 0x9b, 0x87, 0xb6,
	0xa1, 0x7e, 0x05, 0x4f, 0xa1, 0x7d, 0xa9, 0x55, 0x7f, 0x74, 0x6f, 0xd7, 0x08, 0x80, 0x75, 0xef,
	0x7f, 0xf3, 0x43, 0xdf, 0xae, 0xab, 0x32, 0xc1, 0x28, 0x1c, 0x4f, 0x6c, 0x93, 0x5c, 0x41, 0x63,
	0x16, 0x84, 0x8f, 0xb3, 0xef, 0x73, 0xdb, 0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x9f, 0xf9,
	0x22, 0x94, 0x03, 0x00, 0x00,
}
