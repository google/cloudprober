// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/probes/udp/config.proto

/*
Package udp is a generated protocol buffer package.

It is generated from these files:
	github.com/google/cloudprober/probes/udp/config.proto

It has these top-level messages:
	ProbeConf
*/
package udp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProbeConf struct {
	// Export stats after these many milliseconds
	StatsExportIntervalMsec *int32 `protobuf:"varint,2,opt,name=stats_export_interval_msec,json=statsExportIntervalMsec,def=10000" json:"stats_export_interval_msec,omitempty"`
	// Port to send UDP Ping to (UDP Echo).  Should be same as
	// ProberConfig.udp_echo_server_port.
	// TODO: Can we just read this from ProberConfig?
	Port *int32 `protobuf:"varint,3,opt,name=port,def=31122" json:"port,omitempty"`
	// Number of sending side ports to use.
	NumTxPorts *int32 `protobuf:"varint,4,opt,name=num_tx_ports,json=numTxPorts,def=16" json:"num_tx_ports,omitempty"`
	// message max to account for MTU.
	MaxLength        *int32 `protobuf:"varint,5,opt,name=max_length,json=maxLength,def=1300" json:"max_length,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProbeConf) Reset()                    { *m = ProbeConf{} }
func (m *ProbeConf) String() string            { return proto.CompactTextString(m) }
func (*ProbeConf) ProtoMessage()               {}
func (*ProbeConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_ProbeConf_StatsExportIntervalMsec int32 = 10000
const Default_ProbeConf_Port int32 = 31122
const Default_ProbeConf_NumTxPorts int32 = 16
const Default_ProbeConf_MaxLength int32 = 1300

func (m *ProbeConf) GetStatsExportIntervalMsec() int32 {
	if m != nil && m.StatsExportIntervalMsec != nil {
		return *m.StatsExportIntervalMsec
	}
	return Default_ProbeConf_StatsExportIntervalMsec
}

func (m *ProbeConf) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return Default_ProbeConf_Port
}

func (m *ProbeConf) GetNumTxPorts() int32 {
	if m != nil && m.NumTxPorts != nil {
		return *m.NumTxPorts
	}
	return Default_ProbeConf_NumTxPorts
}

func (m *ProbeConf) GetMaxLength() int32 {
	if m != nil && m.MaxLength != nil {
		return *m.MaxLength
	}
	return Default_ProbeConf_MaxLength
}

func init() {
	proto.RegisterType((*ProbeConf)(nil), "cloudprober.probes.udp.ProbeConf")
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/probes/udp/config.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xca, 0x31, 0x4b, 0xc4, 0x30,
	0x18, 0xc6, 0x71, 0xee, 0x6c, 0x87, 0x0b, 0x4e, 0x19, 0xb4, 0x3a, 0x89, 0x3a, 0x38, 0x35, 0xc9,
	0x1d, 0x3a, 0x38, 0x2a, 0x0e, 0x82, 0xc2, 0x51, 0xdc, 0x43, 0x2f, 0xcd, 0xe5, 0x0a, 0x4d, 0xde,
	0x90, 0xbc, 0x91, 0x7c, 0x31, 0xbf, 0x9f, 0x34, 0x75, 0x70, 0x7a, 0x78, 0xfe, 0xfc, 0xc8, 0xa3,
	0x19, 0xf1, 0x94, 0x0e, 0xad, 0x02, 0xcb, 0x0c, 0x80, 0x99, 0x34, 0x53, 0x13, 0xa4, 0xc1, 0x07,
	0x38, 0xe8, 0xc0, 0xca, 0x44, 0x96, 0x06, 0xcf, 0x14, 0xb8, 0xe3, 0x68, 0x5a, 0x1f, 0x00, 0x81,
	0x5e, 0xfc, 0x43, 0xed, 0x82, 0xda, 0x34, 0xf8, 0xdb, 0x9f, 0x15, 0xd9, 0xec, 0xe7, 0xfb, 0x0a,
	0xee, 0x48, 0x5f, 0xc8, 0x75, 0xc4, 0x1e, 0xa3, 0xd4, 0xd9, 0x43, 0x40, 0x39, 0x3a, 0xd4, 0xe1,
	0xbb, 0x9f, 0xa4, 0x8d, 0x5a, 0x35, 0xeb, 0x9b, 0xd5, 0x43, 0xfd, 0x5c, 0x0b, 0xce, 0x39, 0xef,
	0x2e, 0x0b, 0x7c, 0x2b, 0xee, 0xfd, 0x8f, 0x7d, 0x46, 0xad, 0xe8, 0x15, 0xa9, 0xe6, 0xd6, 0x9c,
	0x2d, 0x7a, 0x27, 0xc4, 0x76, 0xdb, 0x95, 0x44, 0xef, 0xc9, 0xb9, 0x4b, 0x56, 0x62, 0x96, 0xf3,
	0x8d, 0x4d, 0x55, 0xc8, 0x5a, 0x3c, 0x75, 0xc4, 0x25, 0xfb, 0x95, 0xf7, 0x73, 0xa5, 0x77, 0x84,
	0xd8, 0x3e, 0xcb, 0x49, 0x3b, 0x83, 0xa7, 0xa6, 0x2e, 0xa6, 0x12, 0x3b, 0xce, 0xbb, 0x8d, 0xed,
	0xf3, 0x47, 0xc9, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x91, 0x91, 0x24, 0x95, 0x07, 0x01, 0x00,
	0x00,
}
