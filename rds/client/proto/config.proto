// Configuration proto for RDS targets.
// Example:
// {
//   request {
//     resource_uri: "gcp://gce_instances/google.com:bbmc-stackdriver/*"
//   }
// }
syntax = "proto2";

package cloudprober.rds;

import "github.com/google/cloudprober/common/oauth/proto/config.proto";
import "github.com/google/cloudprober/common/tlsconfig/proto/config.proto";
import "github.com/google/cloudprober/rds/proto/rds.proto";

// ClientConf represents resource discovery service (RDS) based targets.
// Next tag: 6
message ClientConf {
  message ServerOptions {
    optional string server_address = 1;

    // Optional oauth config for authentication.
    optional oauth.Config oauth_config = 2;

    // TLS config, it can be used to:
    // - Specify a CA cert for server cert verification:
    //     tls_config {
    //       ca_cert_file: "...."
    //     }
    //
    // - Specify client's TLS cert and key:
    //     tls_config {
    //       tls_cert_file: "..."
    //       tls_key_file: "..."
    //     }
    optional tlsconfig.TLSConfig tls_config = 3;
  }
  optional ServerOptions server_options = 1;

  required ListResourcesRequest request = 2;

  // How often targets should be evaluated. Any number less than or equal to 0
  // will result in no target caching (targets will be reevaluated on demand).
  // Note that individual target types may have their own caches implemented
  // (specifically GCE instances/forwarding rules). This does not impact those
  // caches.
  optional int32 re_eval_sec = 3 [default = 30];
}
