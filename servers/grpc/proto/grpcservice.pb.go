// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/servers/grpc/proto/grpcservice.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EchoMessage struct {
	Blob                 []byte   `protobuf:"bytes,1,opt,name=blob" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoMessage) Reset()         { *m = EchoMessage{} }
func (m *EchoMessage) String() string { return proto.CompactTextString(m) }
func (*EchoMessage) ProtoMessage()    {}
func (*EchoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcservice_9da4e1993936e470, []int{0}
}
func (m *EchoMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoMessage.Unmarshal(m, b)
}
func (m *EchoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoMessage.Marshal(b, m, deterministic)
}
func (dst *EchoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoMessage.Merge(dst, src)
}
func (m *EchoMessage) XXX_Size() int {
	return xxx_messageInfo_EchoMessage.Size(m)
}
func (m *EchoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EchoMessage proto.InternalMessageInfo

func (m *EchoMessage) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

type StatusRequest struct {
	ClientName           *string  `protobuf:"bytes,1,opt,name=client_name,json=clientName" json:"client_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcservice_9da4e1993936e470, []int{1}
}
func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (dst *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(dst, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

func (m *StatusRequest) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

type StatusResponse struct {
	UptimeUs             *int64   `protobuf:"varint,1,opt,name=uptime_us,json=uptimeUs" json:"uptime_us,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcservice_9da4e1993936e470, []int{2}
}
func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (dst *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(dst, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetUptimeUs() int64 {
	if m != nil && m.UptimeUs != nil {
		return *m.UptimeUs
	}
	return 0
}

func init() {
	proto.RegisterType((*EchoMessage)(nil), "cloudprober.servers.grpc.EchoMessage")
	proto.RegisterType((*StatusRequest)(nil), "cloudprober.servers.grpc.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "cloudprober.servers.grpc.StatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProberClient is the client API for Prober service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProberClient interface {
	// Echo echoes back incoming messages.
	Echo(ctx context.Context, in *EchoMessage, opts ...grpc.CallOption) (*EchoMessage, error)
	// ServerStatus returns the current server status.
	ServerStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type proberClient struct {
	cc *grpc.ClientConn
}

func NewProberClient(cc *grpc.ClientConn) ProberClient {
	return &proberClient{cc}
}

func (c *proberClient) Echo(ctx context.Context, in *EchoMessage, opts ...grpc.CallOption) (*EchoMessage, error) {
	out := new(EchoMessage)
	err := c.cc.Invoke(ctx, "/cloudprober.servers.grpc.Prober/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proberClient) ServerStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/cloudprober.servers.grpc.Prober/ServerStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProberServer is the server API for Prober service.
type ProberServer interface {
	// Echo echoes back incoming messages.
	Echo(context.Context, *EchoMessage) (*EchoMessage, error)
	// ServerStatus returns the current server status.
	ServerStatus(context.Context, *StatusRequest) (*StatusResponse, error)
}

func RegisterProberServer(s *grpc.Server, srv ProberServer) {
	s.RegisterService(&_Prober_serviceDesc, srv)
}

func _Prober_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProberServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloudprober.servers.grpc.Prober/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProberServer).Echo(ctx, req.(*EchoMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Prober_ServerStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProberServer).ServerStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloudprober.servers.grpc.Prober/ServerStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProberServer).ServerStatus(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Prober_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloudprober.servers.grpc.Prober",
	HandlerType: (*ProberServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Prober_Echo_Handler,
		},
		{
			MethodName: "ServerStatus",
			Handler:    _Prober_ServerStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/google/cloudprober/servers/grpc/proto/grpcservice.proto",
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/servers/grpc/proto/grpcservice.proto", fileDescriptor_grpcservice_9da4e1993936e470)
}

var fileDescriptor_grpcservice_9da4e1993936e470 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x8f, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0x1b, 0xbe, 0xf2, 0x61, 0xa7, 0xd5, 0xc3, 0x9c, 0x4a, 0x3d, 0xa8, 0x0b, 0x62, 0x2f,
	0xee, 0x8a, 0x3f, 0x41, 0xf0, 0xa8, 0x48, 0x8a, 0x5e, 0x4b, 0xb2, 0x0e, 0xdb, 0x40, 0x92, 0x59,
	0x77, 0x76, 0xfd, 0x87, 0xfe, 0x2f, 0xc9, 0x46, 0xa1, 0x1e, 0x8a, 0xde, 0x86, 0x77, 0xde, 0x07,
	0x9e, 0x17, 0xee, 0x5c, 0x13, 0x77, 0xa9, 0xd6, 0x96, 0x3b, 0xe3, 0x98, 0x5d, 0x4b, 0xc6, 0xb6,
	0x9c, 0x5e, 0x7d, 0xe0, 0x9a, 0x82, 0x11, 0x0a, 0xef, 0x14, 0xc4, 0xb8, 0xe0, 0xad, 0xf1, 0x81,
	0x23, 0xe7, 0x73, 0x88, 0x1b, 0x4b, 0x3a, 0x27, 0xb8, 0xdc, 0x23, 0xf4, 0x17, 0xa1, 0x87, 0x9a,
	0xba, 0x80, 0xf9, 0xbd, 0xdd, 0xf1, 0x03, 0x89, 0x54, 0x8e, 0x10, 0x61, 0x5a, 0xb7, 0x5c, 0x2f,
	0x8b, 0xf3, 0x62, 0xbd, 0x28, 0xf3, 0xad, 0x6e, 0xe0, 0x78, 0x13, 0xab, 0x98, 0xa4, 0xa4, 0xb7,
	0x44, 0x12, 0xf1, 0x0c, 0xe6, 0xb6, 0x6d, 0xa8, 0x8f, 0xdb, 0xbe, 0xea, 0x28, 0x77, 0x67, 0x25,
	0x8c, 0xd1, 0x63, 0xd5, 0x91, 0xba, 0x86, 0x93, 0x6f, 0x42, 0x3c, 0xf7, 0x42, 0x78, 0x0a, 0xb3,
	0xe4, 0x63, 0xd3, 0xd1, 0x36, 0x49, 0x06, 0xfe, 0x95, 0x47, 0x63, 0xf0, 0x2c, 0xb7, 0x1f, 0x05,
	0xfc, 0x7f, 0xca, 0x6e, 0xf8, 0x02, 0xd3, 0x41, 0x07, 0x2f, 0xf5, 0x21, 0x63, 0xbd, 0xa7, 0xbb,
	0xfa, 0x5b, 0x4d, 0x4d, 0xd0, 0xc2, 0x62, 0x93, 0xbf, 0xa3, 0x17, 0x5e, 0x1d, 0x06, 0x7f, 0x6c,
	0x5d, 0xad, 0x7f, 0x2f, 0x8e, 0x13, 0xd5, 0xe4, 0x33, 0x00, 0x00, 0xff, 0xff, 0x19, 0xd5, 0x0b,
	0x5a, 0xaa, 0x01, 0x00, 0x00,
}
