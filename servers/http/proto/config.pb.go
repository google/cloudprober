// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/servers/http/proto/config.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// tls_cert_file and tls_key_file field should be set for HTTPS.
type ServerConf_ProtocolType int32

const (
	ServerConf_HTTP  ServerConf_ProtocolType = 0
	ServerConf_HTTPS ServerConf_ProtocolType = 1
)

var ServerConf_ProtocolType_name = map[int32]string{
	0: "HTTP",
	1: "HTTPS",
}

var ServerConf_ProtocolType_value = map[string]int32{
	"HTTP":  0,
	"HTTPS": 1,
}

func (x ServerConf_ProtocolType) Enum() *ServerConf_ProtocolType {
	p := new(ServerConf_ProtocolType)
	*p = x
	return p
}

func (x ServerConf_ProtocolType) String() string {
	return proto.EnumName(ServerConf_ProtocolType_name, int32(x))
}

func (x *ServerConf_ProtocolType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerConf_ProtocolType_value, data, "ServerConf_ProtocolType")
	if err != nil {
		return err
	}
	*x = ServerConf_ProtocolType(value)
	return nil
}

func (ServerConf_ProtocolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ec3a7d747582598, []int{0, 0}
}

// Next available tag = 10
type ServerConf struct {
	Port     *int32                   `protobuf:"varint,1,opt,name=port,def=3141" json:"port,omitempty"`
	Protocol *ServerConf_ProtocolType `protobuf:"varint,6,opt,name=protocol,enum=cloudprober.servers.http.ServerConf_ProtocolType,def=0" json:"protocol,omitempty"`
	// Maximum duration for reading the entire request, including the body.
	ReadTimeoutMs *int32 `protobuf:"varint,2,opt,name=read_timeout_ms,json=readTimeoutMs,def=10000" json:"read_timeout_ms,omitempty"`
	// Maximum duration before timing out writes of the response.
	WriteTimeoutMs *int32 `protobuf:"varint,3,opt,name=write_timeout_ms,json=writeTimeoutMs,def=10000" json:"write_timeout_ms,omitempty"`
	// Maximum amount of time to wait for the next request when keep-alives are
	// enabled.
	IdleTimeoutMs *int32 `protobuf:"varint,4,opt,name=idle_timeout_ms,json=idleTimeoutMs,def=60000" json:"idle_timeout_ms,omitempty"`
	// Certificate file to use for HTTPS servers.
	TlsCertFile *string `protobuf:"bytes,7,opt,name=tls_cert_file,json=tlsCertFile" json:"tls_cert_file,omitempty"`
	// Private key file corresponding to the certificate above.
	TlsKeyFile *string `protobuf:"bytes,8,opt,name=tls_key_file,json=tlsKeyFile" json:"tls_key_file,omitempty"`
	// Disable HTTP/2 for HTTPS servers.
	DisableHttp2 *bool `protobuf:"varint,9,opt,name=disable_http2,json=disableHttp2" json:"disable_http2,omitempty"`
	// Pattern data handler returns pattern data at the url /data_<size_in_bytes>,
	// e.g. "/data_2048".
	PatternDataHandler   []*ServerConf_PatternDataHandler `protobuf:"bytes,5,rep,name=pattern_data_handler,json=patternDataHandler" json:"pattern_data_handler,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ServerConf) Reset()         { *m = ServerConf{} }
func (m *ServerConf) String() string { return proto.CompactTextString(m) }
func (*ServerConf) ProtoMessage()    {}
func (*ServerConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec3a7d747582598, []int{0}
}

func (m *ServerConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConf.Unmarshal(m, b)
}
func (m *ServerConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConf.Marshal(b, m, deterministic)
}
func (m *ServerConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConf.Merge(m, src)
}
func (m *ServerConf) XXX_Size() int {
	return xxx_messageInfo_ServerConf.Size(m)
}
func (m *ServerConf) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConf.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConf proto.InternalMessageInfo

const Default_ServerConf_Port int32 = 3141
const Default_ServerConf_Protocol ServerConf_ProtocolType = ServerConf_HTTP
const Default_ServerConf_ReadTimeoutMs int32 = 10000
const Default_ServerConf_WriteTimeoutMs int32 = 10000
const Default_ServerConf_IdleTimeoutMs int32 = 60000

func (m *ServerConf) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return Default_ServerConf_Port
}

func (m *ServerConf) GetProtocol() ServerConf_ProtocolType {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return Default_ServerConf_Protocol
}

func (m *ServerConf) GetReadTimeoutMs() int32 {
	if m != nil && m.ReadTimeoutMs != nil {
		return *m.ReadTimeoutMs
	}
	return Default_ServerConf_ReadTimeoutMs
}

func (m *ServerConf) GetWriteTimeoutMs() int32 {
	if m != nil && m.WriteTimeoutMs != nil {
		return *m.WriteTimeoutMs
	}
	return Default_ServerConf_WriteTimeoutMs
}

func (m *ServerConf) GetIdleTimeoutMs() int32 {
	if m != nil && m.IdleTimeoutMs != nil {
		return *m.IdleTimeoutMs
	}
	return Default_ServerConf_IdleTimeoutMs
}

func (m *ServerConf) GetTlsCertFile() string {
	if m != nil && m.TlsCertFile != nil {
		return *m.TlsCertFile
	}
	return ""
}

func (m *ServerConf) GetTlsKeyFile() string {
	if m != nil && m.TlsKeyFile != nil {
		return *m.TlsKeyFile
	}
	return ""
}

func (m *ServerConf) GetDisableHttp2() bool {
	if m != nil && m.DisableHttp2 != nil {
		return *m.DisableHttp2
	}
	return false
}

func (m *ServerConf) GetPatternDataHandler() []*ServerConf_PatternDataHandler {
	if m != nil {
		return m.PatternDataHandler
	}
	return nil
}

type ServerConf_PatternDataHandler struct {
	// Response sizes to server, e.g. 1024.
	ResponseSize *int32 `protobuf:"varint,1,req,name=response_size,json=responseSize" json:"response_size,omitempty"`
	// Pattern is repeated to build the response, with "response_size mod
	// pattern_size" filled by '0' bytes.
	Pattern              *string  `protobuf:"bytes,2,opt,name=pattern,def=cloudprober" json:"pattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerConf_PatternDataHandler) Reset()         { *m = ServerConf_PatternDataHandler{} }
func (m *ServerConf_PatternDataHandler) String() string { return proto.CompactTextString(m) }
func (*ServerConf_PatternDataHandler) ProtoMessage()    {}
func (*ServerConf_PatternDataHandler) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec3a7d747582598, []int{0, 0}
}

func (m *ServerConf_PatternDataHandler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConf_PatternDataHandler.Unmarshal(m, b)
}
func (m *ServerConf_PatternDataHandler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConf_PatternDataHandler.Marshal(b, m, deterministic)
}
func (m *ServerConf_PatternDataHandler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConf_PatternDataHandler.Merge(m, src)
}
func (m *ServerConf_PatternDataHandler) XXX_Size() int {
	return xxx_messageInfo_ServerConf_PatternDataHandler.Size(m)
}
func (m *ServerConf_PatternDataHandler) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConf_PatternDataHandler.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConf_PatternDataHandler proto.InternalMessageInfo

const Default_ServerConf_PatternDataHandler_Pattern string = "cloudprober"

func (m *ServerConf_PatternDataHandler) GetResponseSize() int32 {
	if m != nil && m.ResponseSize != nil {
		return *m.ResponseSize
	}
	return 0
}

func (m *ServerConf_PatternDataHandler) GetPattern() string {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return Default_ServerConf_PatternDataHandler_Pattern
}

func init() {
	proto.RegisterEnum("cloudprober.servers.http.ServerConf_ProtocolType", ServerConf_ProtocolType_name, ServerConf_ProtocolType_value)
	proto.RegisterType((*ServerConf)(nil), "cloudprober.servers.http.ServerConf")
	proto.RegisterType((*ServerConf_PatternDataHandler)(nil), "cloudprober.servers.http.ServerConf.PatternDataHandler")
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/servers/http/proto/config.proto", fileDescriptor_8ec3a7d747582598)
}

var fileDescriptor_8ec3a7d747582598 = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0xcd, 0x6e, 0xe2, 0xb6, 0xaf, 0xed, 0x6e, 0x19, 0x3c, 0x0c, 0x9e, 0x42, 0x17, 0x21,
	0x97, 0x4d, 0xda, 0x2a, 0x0a, 0x05, 0x4f, 0x2b, 0x52, 0x10, 0x61, 0x49, 0x7b, 0x8f, 0x69, 0xf2,
	0xda, 0x0e, 0x4e, 0x33, 0x61, 0xe6, 0x55, 0xe9, 0x7e, 0x61, 0xbf, 0x86, 0xcc, 0x24, 0x6b, 0x23,
	0x8b, 0xe0, 0x2d, 0xf9, 0xff, 0x7f, 0xef, 0x37, 0xc3, 0x3c, 0xf8, 0xb8, 0x13, 0xb4, 0x3f, 0x6e,
	0xe2, 0x42, 0x1d, 0x92, 0x9d, 0x52, 0x3b, 0x89, 0x49, 0x21, 0xd5, 0xb1, 0xac, 0xb5, 0xda, 0xa0,
	0x4e, 0x0c, 0xea, 0x1f, 0xa8, 0x4d, 0xb2, 0x27, 0xaa, 0x93, 0x5a, 0x2b, 0x52, 0x49, 0xa1, 0xaa,
	0xad, 0xd8, 0xc5, 0xee, 0x87, 0xf1, 0x0e, 0x1c, 0xb7, 0x70, 0x6c, 0xe1, 0xc9, 0x2f, 0x1f, 0x60,
	0xe5, 0x82, 0x7b, 0x55, 0x6d, 0x19, 0x07, 0xbf, 0x56, 0x9a, 0xb8, 0x17, 0x7a, 0x51, 0xb0, 0xf0,
	0xdf, 0xce, 0xde, 0xcd, 0x52, 0x97, 0xb0, 0x15, 0xf4, 0x9c, 0xab, 0x50, 0x92, 0xbf, 0x0c, 0xbd,
	0xe8, 0x7a, 0x3e, 0x8b, 0xff, 0x65, 0x8d, 0xcf, 0xc6, 0xf8, 0xa1, 0x1d, 0x5a, 0x9f, 0x6a, 0x5c,
	0xf8, 0xcb, 0xf5, 0xfa, 0x21, 0xfd, 0x23, 0x62, 0x77, 0x70, 0xa3, 0x31, 0x2f, 0x33, 0x12, 0x07,
	0x54, 0x47, 0xca, 0x0e, 0x86, 0x5f, 0xb8, 0x93, 0x83, 0xd9, 0x74, 0x3a, 0x9d, 0xa6, 0x23, 0xdb,
	0xae, 0x9b, 0xf2, 0xab, 0x61, 0x09, 0x8c, 0x7f, 0x6a, 0x41, 0xd8, 0xe5, 0x2f, 0xbb, 0xfc, 0xb5,
	0xab, 0xcf, 0x03, 0x77, 0x70, 0x23, 0x4a, 0xf9, 0x17, 0xef, 0x37, 0xfc, 0xfb, 0xc6, 0x6f, 0xdb,
	0x33, 0x3e, 0x81, 0x11, 0x49, 0x93, 0x15, 0xa8, 0x29, 0xdb, 0x0a, 0x89, 0xfc, 0x2a, 0xf4, 0xa2,
	0x7e, 0x3a, 0x20, 0x69, 0xee, 0x51, 0xd3, 0x67, 0x21, 0x91, 0x85, 0x30, 0xb4, 0xcc, 0x77, 0x3c,
	0x35, 0x48, 0xcf, 0x21, 0x40, 0xd2, 0x7c, 0xc1, 0x93, 0x23, 0x6e, 0x61, 0x54, 0x0a, 0x93, 0x6f,
	0x24, 0x66, 0xf6, 0x31, 0xe6, 0xbc, 0x1f, 0x7a, 0x51, 0x2f, 0x1d, 0xb6, 0xe1, 0xd2, 0x66, 0x4c,
	0xc0, 0xab, 0x3a, 0x27, 0x42, 0x5d, 0x65, 0x65, 0x4e, 0x79, 0xb6, 0xcf, 0xab, 0x52, 0xa2, 0xe6,
	0x41, 0x78, 0x19, 0x0d, 0xe6, 0x1f, 0xfe, 0xef, 0x69, 0x1b, 0xc1, 0xa7, 0x9c, 0xf2, 0x65, 0x33,
	0x9e, 0xb2, 0xfa, 0x59, 0xf6, 0xfa, 0x1b, 0xb0, 0xe7, 0xa4, 0xbd, 0xa5, 0x46, 0x53, 0xab, 0xca,
	0x60, 0x66, 0xc4, 0x23, 0x72, 0x2f, 0xbc, 0x88, 0x82, 0x74, 0xf8, 0x14, 0xae, 0xc4, 0x23, 0xb2,
	0x37, 0x70, 0xd5, 0x0a, 0xdd, 0x5e, 0xfa, 0x8b, 0x41, 0xe7, 0x5e, 0xe9, 0x53, 0x37, 0xb9, 0x85,
	0x61, 0x77, 0xcd, 0xac, 0x07, 0x6e, 0xd1, 0xe3, 0x17, 0xac, 0x0f, 0x81, 0xfd, 0x5a, 0x8d, 0xbd,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x71, 0x8f, 0xce, 0x3f, 0xc3, 0x02, 0x00, 0x00,
}
