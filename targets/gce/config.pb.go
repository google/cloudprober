// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/targets/gce/config.proto

/*
Package gce is a generated protocol buffer package.

It is generated from these files:
	github.com/google/cloudprober/targets/gce/config.proto

It has these top-level messages:
	TargetsConf
	Instances
	ForwardingRules
	GlobalOptions
*/
package gce

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Instances_NetworkInterface_IPType int32

const (
	// Private IP address.
	Instances_NetworkInterface_PRIVATE Instances_NetworkInterface_IPType = 0
	// IP address of the first access config.
	Instances_NetworkInterface_PUBLIC Instances_NetworkInterface_IPType = 1
	// First IP address from the first Alias IP range. For example, for
	// alias IP range "192.168.12.0/24", 192.168.12.0 will be returned.
	Instances_NetworkInterface_ALIAS Instances_NetworkInterface_IPType = 2
)

var Instances_NetworkInterface_IPType_name = map[int32]string{
	0: "PRIVATE",
	1: "PUBLIC",
	2: "ALIAS",
}
var Instances_NetworkInterface_IPType_value = map[string]int32{
	"PRIVATE": 0,
	"PUBLIC":  1,
	"ALIAS":   2,
}

func (x Instances_NetworkInterface_IPType) Enum() *Instances_NetworkInterface_IPType {
	p := new(Instances_NetworkInterface_IPType)
	*p = x
	return p
}
func (x Instances_NetworkInterface_IPType) String() string {
	return proto.EnumName(Instances_NetworkInterface_IPType_name, int32(x))
}
func (x *Instances_NetworkInterface_IPType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Instances_NetworkInterface_IPType_value, data, "Instances_NetworkInterface_IPType")
	if err != nil {
		return err
	}
	*x = Instances_NetworkInterface_IPType(value)
	return nil
}
func (Instances_NetworkInterface_IPType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0, 0}
}

// TargetsConf represents GCE targets, e.g. instances, forwarding rules etc.
type TargetsConf struct {
	// If running on GCE, this defaults to the local project.
	Project *string `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	// Types that are valid to be assigned to Type:
	//	*TargetsConf_Instances
	//	*TargetsConf_ForwardingRules
	Type             isTargetsConf_Type `protobuf_oneof:"type"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *TargetsConf) Reset()                    { *m = TargetsConf{} }
func (m *TargetsConf) String() string            { return proto.CompactTextString(m) }
func (*TargetsConf) ProtoMessage()               {}
func (*TargetsConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isTargetsConf_Type interface{ isTargetsConf_Type() }

type TargetsConf_Instances struct {
	Instances *Instances `protobuf:"bytes,2,opt,name=instances,oneof"`
}
type TargetsConf_ForwardingRules struct {
	ForwardingRules *ForwardingRules `protobuf:"bytes,3,opt,name=forwarding_rules,json=forwardingRules,oneof"`
}

func (*TargetsConf_Instances) isTargetsConf_Type()       {}
func (*TargetsConf_ForwardingRules) isTargetsConf_Type() {}

func (m *TargetsConf) GetType() isTargetsConf_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *TargetsConf) GetProject() string {
	if m != nil && m.Project != nil {
		return *m.Project
	}
	return ""
}

func (m *TargetsConf) GetInstances() *Instances {
	if x, ok := m.GetType().(*TargetsConf_Instances); ok {
		return x.Instances
	}
	return nil
}

func (m *TargetsConf) GetForwardingRules() *ForwardingRules {
	if x, ok := m.GetType().(*TargetsConf_ForwardingRules); ok {
		return x.ForwardingRules
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TargetsConf) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TargetsConf_OneofMarshaler, _TargetsConf_OneofUnmarshaler, _TargetsConf_OneofSizer, []interface{}{
		(*TargetsConf_Instances)(nil),
		(*TargetsConf_ForwardingRules)(nil),
	}
}

func _TargetsConf_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TargetsConf)
	// type
	switch x := m.Type.(type) {
	case *TargetsConf_Instances:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instances); err != nil {
			return err
		}
	case *TargetsConf_ForwardingRules:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ForwardingRules); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TargetsConf.Type has unexpected type %T", x)
	}
	return nil
}

func _TargetsConf_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TargetsConf)
	switch tag {
	case 2: // type.instances
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Instances)
		err := b.DecodeMessage(msg)
		m.Type = &TargetsConf_Instances{msg}
		return true, err
	case 3: // type.forwarding_rules
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ForwardingRules)
		err := b.DecodeMessage(msg)
		m.Type = &TargetsConf_ForwardingRules{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TargetsConf_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TargetsConf)
	// type
	switch x := m.Type.(type) {
	case *TargetsConf_Instances:
		s := proto.Size(x.Instances)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TargetsConf_ForwardingRules:
		s := proto.Size(x.ForwardingRules)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Represents GCE instances
type Instances struct {
	// Use DNS to resolve target names (instances). If set to false (default),
	// IP addresses specified in the compute.Instance resource is used. If set
	// to true all the other resolving options are ignored.
	UseDnsToResolve  *bool                       `protobuf:"varint,1,opt,name=use_dns_to_resolve,json=useDnsToResolve,def=0" json:"use_dns_to_resolve,omitempty"`
	NetworkInterface *Instances_NetworkInterface `protobuf:"bytes,2,opt,name=network_interface,json=networkInterface" json:"network_interface,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *Instances) Reset()                    { *m = Instances{} }
func (m *Instances) String() string            { return proto.CompactTextString(m) }
func (*Instances) ProtoMessage()               {}
func (*Instances) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

const Default_Instances_UseDnsToResolve bool = false

func (m *Instances) GetUseDnsToResolve() bool {
	if m != nil && m.UseDnsToResolve != nil {
		return *m.UseDnsToResolve
	}
	return Default_Instances_UseDnsToResolve
}

func (m *Instances) GetNetworkInterface() *Instances_NetworkInterface {
	if m != nil {
		return m.NetworkInterface
	}
	return nil
}

// Get the IP address from Network Interface
type Instances_NetworkInterface struct {
	Index            *int32                             `protobuf:"varint,1,opt,name=index,def=0" json:"index,omitempty"`
	IpType           *Instances_NetworkInterface_IPType `protobuf:"varint,2,opt,name=ip_type,json=ipType,enum=cloudprober.targets.gce.Instances_NetworkInterface_IPType,def=0" json:"ip_type,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *Instances_NetworkInterface) Reset()                    { *m = Instances_NetworkInterface{} }
func (m *Instances_NetworkInterface) String() string            { return proto.CompactTextString(m) }
func (*Instances_NetworkInterface) ProtoMessage()               {}
func (*Instances_NetworkInterface) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

const Default_Instances_NetworkInterface_Index int32 = 0
const Default_Instances_NetworkInterface_IpType Instances_NetworkInterface_IPType = Instances_NetworkInterface_PRIVATE

func (m *Instances_NetworkInterface) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return Default_Instances_NetworkInterface_Index
}

func (m *Instances_NetworkInterface) GetIpType() Instances_NetworkInterface_IPType {
	if m != nil && m.IpType != nil {
		return *m.IpType
	}
	return Default_Instances_NetworkInterface_IpType
}

// Represents GCE forwarding rules
type ForwardingRules struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ForwardingRules) Reset()                    { *m = ForwardingRules{} }
func (m *ForwardingRules) String() string            { return proto.CompactTextString(m) }
func (*ForwardingRules) ProtoMessage()               {}
func (*ForwardingRules) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// Global GCE targets options. These options are independent of the per-probe
// targets which are defined by the "GCETargets" type above.
type GlobalOptions struct {
	// How often targets should be evaluated/expanded
	ReEvalSec        *int32 `protobuf:"varint,1,opt,name=re_eval_sec,json=reEvalSec,def=900" json:"re_eval_sec,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GlobalOptions) Reset()                    { *m = GlobalOptions{} }
func (m *GlobalOptions) String() string            { return proto.CompactTextString(m) }
func (*GlobalOptions) ProtoMessage()               {}
func (*GlobalOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_GlobalOptions_ReEvalSec int32 = 900

func (m *GlobalOptions) GetReEvalSec() int32 {
	if m != nil && m.ReEvalSec != nil {
		return *m.ReEvalSec
	}
	return Default_GlobalOptions_ReEvalSec
}

func init() {
	proto.RegisterType((*TargetsConf)(nil), "cloudprober.targets.gce.TargetsConf")
	proto.RegisterType((*Instances)(nil), "cloudprober.targets.gce.Instances")
	proto.RegisterType((*Instances_NetworkInterface)(nil), "cloudprober.targets.gce.Instances.NetworkInterface")
	proto.RegisterType((*ForwardingRules)(nil), "cloudprober.targets.gce.ForwardingRules")
	proto.RegisterType((*GlobalOptions)(nil), "cloudprober.targets.gce.GlobalOptions")
	proto.RegisterEnum("cloudprober.targets.gce.Instances_NetworkInterface_IPType", Instances_NetworkInterface_IPType_name, Instances_NetworkInterface_IPType_value)
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/targets/gce/config.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0xdd, 0x6e, 0x12, 0x41,
	0x14, 0x66, 0xa9, 0x80, 0x7b, 0x88, 0xb2, 0x9d, 0x9b, 0x12, 0xaf, 0x9a, 0xf5, 0x86, 0x0b, 0xb3,
	0x4b, 0xd0, 0x98, 0xc8, 0x1d, 0xd4, 0x6a, 0x37, 0x69, 0x94, 0x4c, 0xa9, 0x57, 0x26, 0xeb, 0x32,
	0x9c, 0x5d, 0x47, 0xc7, 0x39, 0x9b, 0x99, 0x59, 0x6a, 0x9f, 0xcc, 0x77, 0xf0, 0x15, 0x7c, 0x19,
	0x03, 0x0b, 0x55, 0x49, 0x88, 0x49, 0x2f, 0xcf, 0xf7, 0x37, 0xdf, 0x97, 0x81, 0x97, 0x85, 0x74,
	0x9f, 0xab, 0x45, 0x24, 0xe8, 0x5b, 0x5c, 0x10, 0x15, 0x0a, 0x63, 0xa1, 0xa8, 0x5a, 0x96, 0x86,
	0x16, 0x68, 0x62, 0x97, 0x99, 0x02, 0x9d, 0x8d, 0x0b, 0x81, 0xb1, 0x20, 0x9d, 0xcb, 0x22, 0x2a,
	0x0d, 0x39, 0x62, 0x27, 0x7f, 0xa9, 0xa2, 0xad, 0x2a, 0x2a, 0x04, 0x86, 0x3f, 0x3d, 0xe8, 0xce,
	0xeb, 0xfb, 0x8c, 0x74, 0xce, 0xfa, 0xd0, 0x29, 0x0d, 0x7d, 0x41, 0xe1, 0xfa, 0xde, 0xa9, 0x37,
	0xf0, 0xf9, 0xee, 0x64, 0x53, 0xf0, 0xa5, 0xb6, 0x2e, 0xd3, 0x02, 0x6d, 0xbf, 0x79, 0xea, 0x0d,
	0xba, 0xa3, 0x30, 0x3a, 0x10, 0x1b, 0x25, 0x3b, 0xe5, 0x45, 0x83, 0xff, 0xb1, 0xb1, 0x6b, 0x08,
	0x72, 0x32, 0x37, 0x99, 0x59, 0x4a, 0x5d, 0xa4, 0xa6, 0x52, 0x68, 0xfb, 0x47, 0x9b, 0xa8, 0xc1,
	0xc1, 0xa8, 0x37, 0x77, 0x06, 0xbe, 0xd6, 0x5f, 0x34, 0x78, 0x2f, 0xff, 0x17, 0x9a, 0xb6, 0xe1,
	0x81, 0xbb, 0x2d, 0x31, 0xfc, 0xd5, 0x04, 0xff, 0xee, 0x65, 0x36, 0x02, 0x56, 0x59, 0x4c, 0x97,
	0xda, 0xa6, 0x8e, 0x52, 0x83, 0x96, 0xd4, 0x0a, 0x37, 0xab, 0x1e, 0x8e, 0x5b, 0x79, 0xa6, 0x2c,
	0xf2, 0x5e, 0x65, 0xf1, 0xb5, 0xb6, 0x73, 0xe2, 0x35, 0xcb, 0x3e, 0xc1, 0xb1, 0x46, 0x77, 0x43,
	0xe6, 0x6b, 0x2a, 0xb5, 0x43, 0x93, 0x67, 0x02, 0xb7, 0x63, 0x9f, 0xff, 0x7f, 0x6c, 0xf4, 0xae,
	0xf6, 0x26, 0x3b, 0x2b, 0x0f, 0xf4, 0x1e, 0xf2, 0xe4, 0x87, 0x07, 0xc1, 0xbe, 0x8c, 0x9d, 0x40,
	0x4b, 0xea, 0x25, 0x7e, 0xdf, 0xb4, 0x6b, 0x8d, 0xbd, 0x21, 0xaf, 0x6f, 0xf6, 0x11, 0x3a, 0xb2,
	0x4c, 0xd7, 0xe3, 0x36, 0x2d, 0x1e, 0x8f, 0xc6, 0xf7, 0x68, 0x11, 0x25, 0xb3, 0xf9, 0x6d, 0x89,
	0xe3, 0xce, 0x8c, 0x27, 0x1f, 0x26, 0xf3, 0x73, 0xde, 0x96, 0xe5, 0x1a, 0x08, 0x9f, 0x41, 0xbb,
	0xa6, 0x58, 0x17, 0x76, 0x64, 0xd0, 0x60, 0x00, 0xed, 0xd9, 0xf5, 0xf4, 0x32, 0x39, 0x0b, 0x3c,
	0xe6, 0x43, 0x6b, 0x72, 0x99, 0x4c, 0xae, 0x82, 0x66, 0x78, 0x0c, 0xbd, 0xbd, 0xbf, 0x08, 0x5f,
	0xc0, 0xa3, 0xb7, 0x8a, 0x16, 0x99, 0x7a, 0x5f, 0x3a, 0x49, 0xda, 0xb2, 0xa7, 0xd0, 0x35, 0x98,
	0xe2, 0x2a, 0x53, 0xa9, 0x45, 0xb1, 0x9d, 0x73, 0xf4, 0x6a, 0x38, 0xe4, 0xbe, 0xc1, 0xf3, 0x55,
	0xa6, 0xae, 0x50, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x06, 0x3f, 0x5b, 0x34, 0xc5, 0x02, 0x00,
	0x00,
}
