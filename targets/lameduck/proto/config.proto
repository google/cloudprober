// Provides all configuration necesary to list targets for a cloudprober probe.
syntax = "proto2";

package cloudprober.targets.lameduck;

import "github.com/google/cloudprober/rds/client/proto/config.proto";

message Options {
  // How often to check for lame-ducked targets
  optional int32 re_eval_sec = 1 [default = 10];

  // Runtime config project. If running on GCE, this defaults to the project
  // containing the VM.
  optional string runtimeconfig_project = 2;

  // Lame duck targets runtime config name. An operator will create a variable
  // here to mark a target as lame-ducked.
  optional string runtimeconfig_name = 3 [default = "lame-duck-targets"];

  // Lame duck targets pubsub topic name. An operator will create a message
  // here to mark a target as lame-ducked.
  optional string pubsub_topic = 7;

  // Lame duck expiration time. We ignore variables (targets) that have been
  // updated more than these many seconds ago. This is a safety mechanism for
  // failing to cleanup. Also, the idea is that if a target has actually
  // disappeared, automatic targets expansion will take care of that some time
  // during this expiration period.
  optional int32 expiration_sec = 4 [default = 300];

  // Use an RDS client to get lame-duck-targets.
  // This option is always true now and will be removed after v0.10.7.
  optional bool use_rds = 5 [deprecated = true];

  // RDS server options, for example:
  // rds_server_options {
  //   server_address: "rds-server.xyz:9314"
  //   oauth_config: {
  //     ...
  //   }
  optional rds.ClientConf.ServerOptions rds_server_options = 6;
}
