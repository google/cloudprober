// Configuration proto for ResourceDiscovery (rds) server.
// Example config:
//
// provider {
//   id: "gcp"
//   gcp_config {
//     project_id: 'test-project-id'
//     gce_instances {}
//     forwarding_rules {}
//   }
// }
syntax = "proto2";

package cloudprober.targets.rds;

import "github.com/google/cloudprober/targets/rds/server/gcp/proto/config.proto";

message ServerConf {
  // List of providers that server supports.
  repeated Provider provider = 1;

  // Listener address for RDS server. If this address is not provided we try
  // to use the default gRPC server configured through the
  // runtime.SetDefaultGRPCServer() call.
  // TODO(manugarg): Deprecate this option. While running as part of
  // cloudprober, only the top-level gRPC server should be configured. While
  // running standalone, cmd/server.go should create a gRPC server and provide
  // that to server.New() call.
  optional string addr = 2;
}

message Provider {
  // Provider identifier, e.g. "gcp". Server routes incoming requests to various
  // providers based on this id.
  required string id = 1;

  oneof config {
    gcp.ProviderConfig gcp_config = 2;
  }
}
