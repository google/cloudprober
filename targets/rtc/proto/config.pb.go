// Provides all configuration necesary to list targets for a cloudprober probe.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.2
// source: github.com/google/cloudprober/targets/rtc/proto/config.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// TargetsConf represents listing targets from a key/val set stored in the RTC
// API under a certain provided configuration. It always only lists the keys
// (hostnames) and provides a resolver which will resolve to a single tag. This
// can be used as a kind of drop-in replacement for GCE Instances when that
// would not be possible. For example, one could set "resolve_tag" to "ip", and
// this lister will now list all VM names, with a resolver that resolves those
// names to their ip addresses.
//
// For more information on RTC see
// https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/
//
// It is assumed that this is being curated, and indeed can be controlled with
// settings in a cloudprober configuration.  See
// cloudprober/config/config.proto.
type TargetsConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Config-name to list hosts from.
	Cfg *string `protobuf:"bytes,1,opt,name=cfg" json:"cfg,omitempty"`
	// Expiration time in ms for RTC variables. Variables older will be ignored.
	ExpireMsec *int32 `protobuf:"varint,2,opt,name=expire_msec,json=expireMsec,def=30000" json:"expire_msec,omitempty"`
	// Which address tag to resolve a hostname to. Hosts report multiple addresses
	// for themselves, each with a "tag" (like "PUBLIC_IP" or "PRIVATE_IP"). For
	// more information, see the "tag" field of the RtcTargetInfo.Address message.
	ResolveTag *string `protobuf:"bytes,3,opt,name=resolve_tag,json=resolveTag" json:"resolve_tag,omitempty"`
	// groups is a list of groups that should be included by the lister. Hosts can
	// assign themselves a set "groups" such as "Zone1" or "HasMultiNIC". If this
	// field is set, then we will filter out hosts that don't have a group that
	// matches any groups listed here. If groups is not set, no filtering will
	// occure.
	//
	// For more information, see the "groups" field of the RtcTargetInfo message.
	//
	// Example :
	//   Host1 has group "G1" and "G2"
	//   Host2 has groups "G2" and "G3"
	//   Host3 has no groups.
	//   The following table shows values for groups and which hosts will be
	//   listed.
	//   groups      | Listed Hosts
	//   ------------|--------------------
	//   ["G1"]      | Host1
	//   ["G2"]      | Host1, Host2
	//   ["G1","G3"] | Host1, Host2
	//   ["G4"]      | None
	//   []          | Host1, Host2, Host3
	Groups []string `protobuf:"bytes,4,rep,name=groups" json:"groups,omitempty"`
	// How often targets should be evaluated. Any number less than or equal to 0
	// will result in no target caching (targets will be reevaluated on demand).
	ReEvalSec *int32 `protobuf:"varint,6,opt,name=re_eval_sec,json=reEvalSec,def=0" json:"re_eval_sec,omitempty"`
	// The alphanumeric ID of the project which this instance is member of
	// (not project number)
	// e.g. bbmc-cloudprober-instance-cxkdsa123
	ProjectId []string `protobuf:"bytes,7,rep,name=project_id,json=projectId" json:"project_id,omitempty"`
}

// Default values for TargetsConf fields.
const (
	Default_TargetsConf_ExpireMsec = int32(30000)
	Default_TargetsConf_ReEvalSec  = int32(0)
)

func (x *TargetsConf) Reset() {
	*x = TargetsConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_cloudprober_targets_rtc_proto_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetsConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetsConf) ProtoMessage() {}

func (x *TargetsConf) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_cloudprober_targets_rtc_proto_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetsConf.ProtoReflect.Descriptor instead.
func (*TargetsConf) Descriptor() ([]byte, []int) {
	return file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDescGZIP(), []int{0}
}

func (x *TargetsConf) GetCfg() string {
	if x != nil && x.Cfg != nil {
		return *x.Cfg
	}
	return ""
}

func (x *TargetsConf) GetExpireMsec() int32 {
	if x != nil && x.ExpireMsec != nil {
		return *x.ExpireMsec
	}
	return Default_TargetsConf_ExpireMsec
}

func (x *TargetsConf) GetResolveTag() string {
	if x != nil && x.ResolveTag != nil {
		return *x.ResolveTag
	}
	return ""
}

func (x *TargetsConf) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *TargetsConf) GetReEvalSec() int32 {
	if x != nil && x.ReEvalSec != nil {
		return *x.ReEvalSec
	}
	return Default_TargetsConf_ReEvalSec
}

func (x *TargetsConf) GetProjectId() []string {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

var File_github_com_google_cloudprober_targets_rtc_proto_config_proto protoreflect.FileDescriptor

var file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x2f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x72, 0x74, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x2e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x2e, 0x72, 0x74, 0x63, 0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x66, 0x67, 0x12, 0x26, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x6d, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x05,
	0x33, 0x30, 0x30, 0x30, 0x30, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4d, 0x73, 0x65,
	0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65,
	0x5f, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x01, 0x30, 0x52, 0x09, 0x72, 0x65, 0x45, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x42, 0x31, 0x5a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x2f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x72, 0x74, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDescOnce sync.Once
	file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDescData = file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDesc
)

func file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDescGZIP() []byte {
	file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDescOnce.Do(func() {
		file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDescData)
	})
	return file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDescData
}

var file_github_com_google_cloudprober_targets_rtc_proto_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_google_cloudprober_targets_rtc_proto_config_proto_goTypes = []interface{}{
	(*TargetsConf)(nil), // 0: cloudprober.targets.rtc.TargetsConf
}
var file_github_com_google_cloudprober_targets_rtc_proto_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_google_cloudprober_targets_rtc_proto_config_proto_init() }
func file_github_com_google_cloudprober_targets_rtc_proto_config_proto_init() {
	if File_github_com_google_cloudprober_targets_rtc_proto_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_google_cloudprober_targets_rtc_proto_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetsConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_google_cloudprober_targets_rtc_proto_config_proto_goTypes,
		DependencyIndexes: file_github_com_google_cloudprober_targets_rtc_proto_config_proto_depIdxs,
		MessageInfos:      file_github_com_google_cloudprober_targets_rtc_proto_config_proto_msgTypes,
	}.Build()
	File_github_com_google_cloudprober_targets_rtc_proto_config_proto = out.File
	file_github_com_google_cloudprober_targets_rtc_proto_config_proto_rawDesc = nil
	file_github_com_google_cloudprober_targets_rtc_proto_config_proto_goTypes = nil
	file_github_com_google_cloudprober_targets_rtc_proto_config_proto_depIdxs = nil
}
